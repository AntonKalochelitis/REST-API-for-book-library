version: '3'

services:
  nginx:
    container_name: ${APP_WEB_HOST}
    build:
      context: ./.docker/nginx
      args:
        APP_ENV: ${APP_ENV}
        APP_PHP_FPM: ${PHP_FPM_HOST}
    ports:
      - ${APP_WEB_PORT}:80
    depends_on:
      - postgresql
      - php_fpm
    working_dir: /app
    volumes:
      - ./:/app:rw
    restart: always

  php_fpm:
    container_name: ${PHP_FPM_HOST}
    build:
      context: ./.docker/php-fpm
      args:
        APP_ENV: ${APP_ENV}
    volumes:
      - ./:/app:rw
      - ./var/log:/app/var/log:rw
    working_dir: /app
    restart: always

  postgresql:
    container_name: ${APP_DATABASE_TYPE}
    image: postgres:${APP_DATABASE_VER}
    ports:
      - ${APP_DATABASE_PORT:-5432}:5432
    environment:
      POSTGRES_DB: ${APP_DATABASE_DB:-app}
      POSTGRES_USER: ${APP_DATABASE_USER:-app}
      POSTGRES_PASSWORD: ${APP_DATABASE_PASSWORD:-!ChangeMe!}
    restart: always

  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgresql
    ports:
      - 8080:8080

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
